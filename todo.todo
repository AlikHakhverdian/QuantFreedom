Currently Working On:
    ☐ fix simulate from signals
    ☐ Does disabling cache=True in your application change anything?
    ☐ update release notes
    ☐ update feature notes
    ☐ merge dev into main
    ☐ 

Next Verson:
    ☐ create cart calc where the person can just copy paste their settings and get the number back as well as the number of cart times the number of ind settings ... then also include a number for total bars tested times number of order settings times number of ind settings make it a helper function because it will just print the results as the return
    ☐ create base func that takes 1 set of settings and reutnrs the order record infor necessary to make an octobot like report in a new window https://raw.githubusercontent.com/Drakkar-Software/OctoBot-Pro/assets/images/report_1.jpg
    ☐ create base that returns entry settings using vbt indicator creation thing
    ☐ once new window then make it so you can select from a max of 5 or 10 different reports

Documentation:

    
Python course:
    ☐ watch some courses and make simple 1 or 2 min vids on the topic
    ☐ find tips and tricks videos and make 1 or 2 min simple videos

Numpy course:


Pandas course:


Polars course:


Numba:
    ☐ see if you can repurpose cart array when using numba for df cart array

TODOs:
    ☐ make replay_trade_plotter work with order records
    ☐ make it so leverage goes to 100 when sl or tsl moves past entry and liq price is maxed out
    ☐ figure out a way to filter the true and false for stops and trails

Other Users Needed:
    ☐ check on seeing if the deletion of numba cache works on other peoples comps

Ask Other Users ?:
    ☐ add the ability to put user defined sl tp tsl prices

Would Be Nice:
    ☐ send pct change of position in order result when decreasing or increaseing position size

Archive:
  ✔ make data frame return only function @done(23-03-20 19:57)
  ✔ make a work around for cart array numba @done(23-03-19 18:46)
  ✔ work in selling @done(23-03-19 13:52)
  ✔ remove the ability for the user to create sl tsl tp prices @done(23-03-18 19:27) @project(Currently Working On)
  ✔ make a function for only getting the cart arrays that make it past the filter and include the order settings id ... basically just borrow from the df array @done(23-03-18 18:54) @project(Currently Working On)
  ✔ map order type number to english @done(23-03-18 18:55) @project(Currently Working On)
  ✔ put df in an order that makes sense @done(23-03-18 18:55) @project(Currently Working On)
  ✔ change all tsl_pcts to tsl_pcts init @done(23-03-18 19:01) @project(Currently Working On)
  ✔ create order status info for moved sl moved and set to filled for now 
  ✔ work on check stops - investigate why no sl to be stops 
  ✔ order check for sl to be to make sure specific settings are there when wanting to sl to be 
  ✔ order check for tsl to be to make sure specific settings are there when wanting to tsl to be 
  ✔ change up df to remove sl pct and others 
  ✔ create or filled so i can subtract that num from end or if the current settings don't pass gains filter 
  ✔ work on long decrease 
  ✔ add an else statement to the gains that deals with erasing the data from order records 
  ✔ multiple all the cart arrays pct by 100 before returning cart array 
  ✔ update code to get position size in buy func 
  ✔ delete log records 
  ✔ add each trade info to order records 
  ✔ return cart array 
  ✔ added the ability to delete pycache and also added a specific folder where numba cache is and also the clear cache deletes the numba cache as well 
  ✔ created the named tuples now 
  ✔ got the long increase working 
  ✔ fixed the main branch for brandon 
  ✔ cleaned up fill order and log records 
  ✔ did the whole order check section over again 
  ✔ work on check stops - investigate tsl 
  ✔ make log_trades_plot work with order records 
